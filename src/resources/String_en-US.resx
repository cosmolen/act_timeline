<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="buttonFontSelect" xml:space="preserve">
    <value>Select Font</value>
  </data>
  <data name="buttonFontSelect2" xml:space="preserve">
    <value>Select Font</value>
  </data>
  <data name="buttonFontSelect3" xml:space="preserve">
    <value>Select Font</value>
  </data>
  <data name="buttonFontSelect4" xml:space="preserve">
    <value>Select Font</value>
  </data>
  <data name="buttonFontSelect5" xml:space="preserve">
    <value>Select Font</value>
  </data>
  <data name="buttonLoad" xml:space="preserve">
    <value>Load</value>
  </data>
  <data name="buttonPause" xml:space="preserve">
    <value>Pause</value>
  </data>
  <data name="buttonPlay" xml:space="preserve">
    <value>Play</value>
  </data>
  <data name="buttonRefreshList" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="buttonResetBarColor" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="buttonResetBarEmColor" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="buttonResetDurationBackColor" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="buttonResetDurationColor" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="buttonResetFontColor" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="buttonResetFontStrokeColor" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="buttonResourceDirOpen" xml:space="preserve">
    <value>Open Folder</value>
  </data>
  <data name="buttonRewind" xml:space="preserve">
    <value>Rewind</value>
  </data>
  <data name="buttonUnload" xml:space="preserve">
    <value>Unload</value>
  </data>
  <data name="checkBoxAutohide" xml:space="preserve">
    <value>Hide overlay when inactive</value>
  </data>
  <data name="checkBoxAutoloadAfterChangeZone" xml:space="preserve">
    <value>Autoload timeline when zone changed</value>
  </data>
  <data name="checkBoxAutoStop" xml:space="preserve">
    <value>Stop timeline when reset</value>
  </data>
  <data name="checkBoxMoveOverlayByDrag" xml:space="preserve">
    <value>Allow mouse click</value>
  </data>
  <data name="checkBoxMoveOverlayByDrag2" xml:space="preserve">
    <value>Allow mouse click</value>
  </data>
  <data name="checkBoxMoveOverlayByDrag3" xml:space="preserve">
    <value>Allow mouse click</value>
  </data>
  <data name="checkBoxMoveOverlayByDrag4" xml:space="preserve">
    <value>Allow mouse click</value>
  </data>
  <data name="checkBoxMoveOverlayByDrag5" xml:space="preserve">
    <value>Allow mouse click</value>
  </data>
  <data name="checkBoxOver10" xml:space="preserve">
    <value>Show over 10 seconds</value>
  </data>
  <data name="checkBoxOver102" xml:space="preserve">
    <value>Show over 10 seconds</value>
  </data>
  <data name="checkBoxOver103" xml:space="preserve">
    <value>Show over 10 seconds</value>
  </data>
  <data name="checkBoxOver104" xml:space="preserve">
    <value>Show over 10 seconds</value>
  </data>
  <data name="checkBoxOver105" xml:space="preserve">
    <value>Show over 10 seconds</value>
  </data>
  <data name="CheckBoxOverlayVisible" xml:space="preserve">
    <value>Visible</value>
  </data>
  <data name="CheckBoxOverlayVisible2" xml:space="preserve">
    <value>Visible</value>
  </data>
  <data name="CheckBoxOverlayVisible3" xml:space="preserve">
    <value>Visible</value>
  </data>
  <data name="CheckBoxOverlayVisible4" xml:space="preserve">
    <value>Visible</value>
  </data>
  <data name="CheckBoxOverlayVisible5" xml:space="preserve">
    <value>Visible</value>
  </data>
  <data name="checkBoxPlaySoundByACT" xml:space="preserve">
    <value>Play sound via ACT</value>
  </data>
  <data name="checkBoxPopup" xml:space="preserve">
    <value>Popup mode</value>
  </data>
  <data name="checkBoxPopup2" xml:space="preserve">
    <value>Popup mode</value>
  </data>
  <data name="checkBoxPopup3" xml:space="preserve">
    <value>Popup mode</value>
  </data>
  <data name="checkBoxPopup4" xml:space="preserve">
    <value>Popup mode</value>
  </data>
  <data name="checkBoxPopup5" xml:space="preserve">
    <value>Popup mode</value>
  </data>
  <data name="checkBoxReverseOrder" xml:space="preserve">
    <value>Reverse display order</value>
  </data>
  <data name="checkBoxReverseOrder2" xml:space="preserve">
    <value>Reverse display order</value>
  </data>
  <data name="checkBoxReverseOrder3" xml:space="preserve">
    <value>Reverse display order</value>
  </data>
  <data name="checkBoxReverseOrder4" xml:space="preserve">
    <value>Reverse display order</value>
  </data>
  <data name="checkBoxReverseOrder5" xml:space="preserve">
    <value>Reverse display order</value>
  </data>
  <data name="checkBoxShowCasting" xml:space="preserve">
    <value>Show castings</value>
  </data>
  <data name="checkBoxShowCasting2" xml:space="preserve">
    <value>Show castings</value>
  </data>
  <data name="checkBoxShowCasting3" xml:space="preserve">
    <value>Show castings</value>
  </data>
  <data name="checkBoxShowCasting4" xml:space="preserve">
    <value>Show castings</value>
  </data>
  <data name="checkBoxShowCasting5" xml:space="preserve">
    <value>Show castings</value>
  </data>
  <data name="checkBoxShowOverlayButtons" xml:space="preserve">
    <value>Show control buttons</value>
  </data>
  <data name="checkBoxShowOverlayButtons2" xml:space="preserve">
    <value>Show control buttons</value>
  </data>
  <data name="checkBoxShowOverlayButtons3" xml:space="preserve">
    <value>Show control buttons</value>
  </data>
  <data name="checkBoxShowOverlayButtons4" xml:space="preserve">
    <value>Show control buttons</value>
  </data>
  <data name="checkBoxShowOverlayButtons5" xml:space="preserve">
    <value>Show control buttons</value>
  </data>
  <data name="checkBoxSolidBar" xml:space="preserve">
    <value>Use solid color bar</value>
  </data>
  <data name="checkBoxUnder10" xml:space="preserve">
    <value>Show under 10 seconds</value>
  </data>
  <data name="checkBoxUnder102" xml:space="preserve">
    <value>Show under 10 seconds</value>
  </data>
  <data name="checkBoxUnder103" xml:space="preserve">
    <value>Show under 10 seconds</value>
  </data>
  <data name="checkBoxUnder104" xml:space="preserve">
    <value>Show under 10 seconds</value>
  </data>
  <data name="checkBoxUnder105" xml:space="preserve">
    <value>Show under 10 seconds</value>
  </data>
  <data name="labelBar" xml:space="preserve">
    <value>Width:</value>
  </data>
  <data name="labelBar2" xml:space="preserve">
    <value>Width:</value>
  </data>
  <data name="labelBar3" xml:space="preserve">
    <value>Width:</value>
  </data>
  <data name="labelBar4" xml:space="preserve">
    <value>Width:</value>
  </data>
  <data name="labelBar5" xml:space="preserve">
    <value>Width:</value>
  </data>
  <data name="labelBarColor" xml:space="preserve">
    <value>Bar color:</value>
  </data>
  <data name="labelBarEmColor" xml:space="preserve">
    <value>Emphatic color:</value>
  </data>
  <data name="labelColumnSize" xml:space="preserve">
    <value>Row</value>
  </data>
  <data name="labelColumnSize2" xml:space="preserve">
    <value>Row</value>
  </data>
  <data name="labelColumnSize3" xml:space="preserve">
    <value>Row</value>
  </data>
  <data name="labelColumnSize4" xml:space="preserve">
    <value>Row</value>
  </data>
  <data name="labelColumnSize5" xml:space="preserve">
    <value>Row</value>
  </data>
  <data name="labelDurationBackColor" xml:space="preserve">
    <value>Duration background color:</value>
  </data>
  <data name="labelDurationColor" xml:space="preserve">
    <value>Duration progress color:</value>
  </data>
  <data name="labelFont" xml:space="preserve">
    <value>Font:</value>
  </data>
  <data name="labelFont2" xml:space="preserve">
    <value>Font:</value>
  </data>
  <data name="labelFont3" xml:space="preserve">
    <value>Font:</value>
  </data>
  <data name="labelFont4" xml:space="preserve">
    <value>Font:</value>
  </data>
  <data name="labelFont5" xml:space="preserve">
    <value>Font:</value>
  </data>
  <data name="labelFontColor" xml:space="preserve">
    <value>Font color:</value>
  </data>
  <data name="labelFontStrokeColor" xml:space="preserve">
    <value>Stroke color:</value>
  </data>
  <data name="labelLoadedTimeline" xml:space="preserve">
    <value>-- No active timeline --</value>
  </data>
  <data name="labelLoadedTimelineLabel" xml:space="preserve">
    <value>Loaded Timeline:</value>
  </data>
  <data name="labelNumRows" xml:space="preserve">
    <value>Number of rows to display:</value>
  </data>
  <data name="labelNumRows2" xml:space="preserve">
    <value>Number of rows to display:</value>
  </data>
  <data name="labelNumRows3" xml:space="preserve">
    <value>Number of rows to display:</value>
  </data>
  <data name="labelNumRows4" xml:space="preserve">
    <value>Number of rows to display:</value>
  </data>
  <data name="labelNumRows5" xml:space="preserve">
    <value>Number of rows to display:</value>
  </data>
  <data name="labelOpacity" xml:space="preserve">
    <value>Opacity:</value>
  </data>
  <data name="labelOpacity2" xml:space="preserve">
    <value>Opacity:</value>
  </data>
  <data name="labelOpacity3" xml:space="preserve">
    <value>Opacity:</value>
  </data>
  <data name="labelOpacity4" xml:space="preserve">
    <value>Opacity:</value>
  </data>
  <data name="labelOpacity5" xml:space="preserve">
    <value>Opacity:</value>
  </data>
  <data name="labelOverlayOrientation" xml:space="preserve">
    <value>Overlay position</value>
  </data>
  <data name="labelOverlayOrientation2" xml:space="preserve">
    <value>Overlay position</value>
  </data>
  <data name="labelOverlayOrientation3" xml:space="preserve">
    <value>Overlay position</value>
  </data>
  <data name="labelOverlayOrientation4" xml:space="preserve">
    <value>Overlay position</value>
  </data>
  <data name="labelOverlayOrientation5" xml:space="preserve">
    <value>Overlay position</value>
  </data>
  <data name="labelResourceDir" xml:space="preserve">
    <value>Resource directory:</value>
  </data>
  <data name="labelTextWidth" xml:space="preserve">
    <value>Height:</value>
  </data>
  <data name="labelTextWidth2" xml:space="preserve">
    <value>Height:</value>
  </data>
  <data name="labelTextWidth3" xml:space="preserve">
    <value>Height:</value>
  </data>
  <data name="labelTextWidth4" xml:space="preserve">
    <value>Height:</value>
  </data>
  <data name="labelTextWidth5" xml:space="preserve">
    <value>Height:</value>
  </data>
  <data name="lblCtrl" xml:space="preserve">
    <value>Timeline Control</value>
  </data>
  <data name="lblFontColorSet" xml:space="preserve">
    <value>Font</value>
  </data>
  <data name="lblInfo" xml:space="preserve">
    <value>Timeline Information</value>
  </data>
  <data name="lblList" xml:space="preserve">
    <value>Timeline List</value>
  </data>
  <data name="lblOverlaySet" xml:space="preserve">
    <value>Timeline Overlay Settings</value>
  </data>
  <data name="lblRowColorSet" xml:space="preserve">
    <value>Row</value>
  </data>
  <data name="lblSettings" xml:space="preserve">
    <value>Timeline Settings</value>
  </data>
  <data name="tabPage1" xml:space="preserve">
    <value>Overlay 1</value>
  </data>
  <data name="tabPage2" xml:space="preserve">
    <value>Overlay 2</value>
  </data>
  <data name="tabPage3" xml:space="preserve">
    <value>Overlay 3</value>
  </data>
  <data name="tabPage4" xml:space="preserve">
    <value>Overlay 4</value>
  </data>
  <data name="tabPage5" xml:space="preserve">
    <value>Overlay 5</value>
  </data>
  <data name="tabPage6" xml:space="preserve">
    <value>Colors</value>
  </data>
  <data name="_ACT_Timeline" xml:space="preserve">
    <value>ACT Timeline</value>
  </data>
  <data name="_Found_N_sound_files" xml:space="preserve">
    <value>Found {0} timeline files.</value>
  </data>
  <data name="_Found_N_timeline_txt_files" xml:space="preserve">
    <value>Found {0} sound files. </value>
  </data>
  <data name="_Resource_dir_exists" xml:space="preserve">
    <value>Resource directory exists! </value>
  </data>
  <data name="_Resource_dir_not_found" xml:space="preserve">
    <value>Unable to find resource directory :/</value>
  </data>
  <data name="_Show_Timeline" xml:space="preserve">
    <value>Timeline</value>
  </data>
  <data name="_Sound_files_dir_not_found" xml:space="preserve">
    <value>Unable to find wav directory.</value>
  </data>
  <data name="_Timeline_txt_files_dir_not_found" xml:space="preserve">
    <value>Unable to find timeline directory.</value>
  </data>
</root>